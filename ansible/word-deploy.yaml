---
- name: üöÄ Deploy Complete WordPress Stack (NGINX + PHP-FPM + MariaDB)
  hosts: wordpress
  become: yes
  vars:
    php_version: "8.1"
    wp_db_name: "wordpress"
    wp_db_user: "wpuser"
    wp_db_password: "StrongPassword!"
    mysql_root_password: "StrongPassword!"

  tasks:

    # ----------------------------
    # 1Ô∏è‚É£ System Preparation
    # ----------------------------
    - name: Ensure APT cache is up to date
      apt:
        update_cache: yes
        cache_valid_time: 3600

    # ----------------------------
    # 2Ô∏è‚É£ Web Server Configuration (NGINX + PHP-FPM)
    # ----------------------------
    - name: Install NGINX
      apt:
        name: nginx
        state: present

    - name: Install PHP and required extensions
      apt:
        name:
          - "php{{ php_version }}-fpm"
          - php-mysql
          - php-curl
          - php-gd
          - php-mbstring
          - php-xml
          - php-zip
        state: present

    - name: Configure PHP to secure path info
      lineinfile:
        path: "/etc/php/{{ php_version }}/fpm/php.ini"
        regexp: '^;?cgi.fix_pathinfo='
        line: 'cgi.fix_pathinfo=0'

    - name: Restart PHP-FPM service
      service:
        name: "php{{ php_version }}-fpm"
        state: restarted

    - name: Ensure NGINX is running
      service:
        name: nginx
        state: started
        enabled: yes

    # ----------------------------
    # 3Ô∏è‚É£ Database Configuration (MariaDB)
    # ----------------------------
    - name: Install MariaDB Server
      apt:
        name: mariadb-server
        state: present

    - name: Start and enable MariaDB service
      service:
        name: mariadb
        state: started
        enabled: yes

    - name: Set root password and secure installation
      mysql_user:
        name: root
        host_all: true
        password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Remove anonymous users
      mysql_user:
        name: ''
        host_all: true
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Disallow remote root login
      mysql_user:
        name: root
        host: "{{ item }}"
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
      loop:
        - "::1"
        - "127.0.0.1"
        - "%"
        - "localhost.localdomain"

    - name: Remove test database
      mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Create WordPress database
      mysql_db:
        name: "{{ wp_db_name }}"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Create WordPress DB user
      mysql_user:
        name: "{{ wp_db_user }}"
        password: "{{ wp_db_password }}"
        priv: "{{ wp_db_name }}.*:ALL"
        host: "localhost"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"

    # ----------------------------
    # 4Ô∏è‚É£ WordPress Deployment
    # ----------------------------
    - name: Download latest WordPress package
      get_url:
        url: "https://wordpress.org/latest.tar.gz"
        dest: /tmp/latest.tar.gz

    - name: Extract WordPress archive
      unarchive:
        src: /tmp/latest.tar.gz
        dest: /var/www/html/
        remote_src: yes

    - name: Set proper ownership for WordPress files
      file:
        path: /var/www/html/
        owner: www-data
        group: www-data
        recurse: yes

    - name: Ensure NGINX and PHP-FPM are restarted after deployment
      service:
        name: "{{ item }}"
        state: restarted
      loop:
        - nginx
        - "php{{ php_version }}-fpm"
